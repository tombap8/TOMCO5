// 제이쿼리 기본 JS - main.js 
// html이 모두 로딩후 실행구역
$(() => { ///////// jQB /////////////////

  // JS에서 제일 중요한 것은? -> 요소선택!
  // JS에서 편리한 요소선택법은? 
  // document.querySelector() / querySelectorAll()

  // 제이쿼리 함수호출법
  // jQuery() -> $() 축약형을 많이씀!
  // 선택법: $(선택자)

  /******************************** 
    1. 대상선정 변수할당
  ********************************/
  // 대상1: 주인공 미니언즈 선택(변수할당!)
  let mi = $('.mi');
  // 대상2: 버튼들 
  let btns = $('.btns>button');
  // 대상3: 빌딩각방
  let bd = $('.building li');
  // 대상4: 메시지박스
  let msg = $('.msg');

  // console.log(mi);

  /******************************** 
    2. 초기화 셋팅하기
  ********************************/
  // 2-1. 버튼 셋팅: 모든버튼 다 숨기고 첫번째만 보이게하기
  btns.hide().first().show();
  // 버튼들.숨겨라().첫번째().보여라()

  // 주사기, 좀비 코드 변수에 담기
  // 주사기
  let inj = '<img src="images/inj.png" alt="주사기" class="inj">';
  // 좀비1
  let mz1 = '<img src="images/mz1.png" alt="좀비1" class="mz"">';
  // 좀비2
  let mz2 = '<img src="images/mz2.png" alt="좀비2" class="mz"">';
  // 좀비들
  let zom = '<img src="images/zom.png" alt="좀비들" class="mz"">';

  // 2-2. 빌딩숫자 셋팅
  // -> 모든 빌딩 li를 순서대로 돌면서
  // 순번넣기 + 좀비,주사기 넣기
  // 대상: 빌딩 li -> bd변수
  bd.each((idx, ele) => {
    // 1. 각 li요소에 글자순번 넣기
    $(ele).text(idx);
    // text()는 글자넣기/읽기 메서드

    // 2. 좀비 + 주사기 넣기
    // 뒤에 코드넣기는 append() 메서드사용!
    if (idx === 2) $(ele).append(inj);
    else if (idx === 9) $(ele).append(mz1);
    else if (idx === 7) $(ele).append(mz2);
    else if (idx === 1) $(ele).append(zom);

  }); //////// each /////////////
  /* 
     [ for문을 쓰지 않고 돌게해주는 제이쿼리 메서드 ]
     ->>>>>> each(function(idx,ele){})
     ->>>>>> each((idx,ele)=>{})

     - 요소를 순서대로 돌면서 구현부를 실행함
     - 첫번째 전달변수 idx : 순번이 전달됨(0부터)
     - 두번째 전달변수 ele : 각각의 요소가 전달됨
     (비교) forEach((ele,idx)=>{})
  */

     // 2-3. 모든 좀비 숨기기
     $('.mz').hide();
     // 선택요소가 여러개이면 for문을 써야하지만 제이쿼리는 자동으로 모두 셋팅해준다!!!

     /********************************** 
        3. 버튼별 클릭 이벤트 함수 만들기
     **********************************/
    // 3-1. 첫번째 버튼 클릭시
    btns.first().click(()=>{
      // 미니언즈가 8번방으로 이동하기
      mi.css({
        top:"200px",
        left:"200px"
      })
    })

    /* 
      [ 제이쿼리 애니메이션 메서드 ]
      animate({CSS설정},시간,이징,함수)
      - CSS는 속성:값 객체형식으로 사용
      - 시간은 1/1000초 단위없이사용
        (시간을 안쓰면 기본시간 400이 적용됨)
      - 이징은 가속도 
      (참조: https://easings.net/ko)
      - 함수는 애니메이션 후 실행코드(콜백함수)

      [ 제이쿼리 CSS변경 메서드 ]
      $(선택자).css({
        속성1:값,
        속성2:값,
        속성3:값
      })

      JS와 비교:
      선택자.style.속성1 = 값
      선택자.style.속성2 = 값
      선택자.style.속성3 = 값
    */

}); //////////// jQB ///////////////////